
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author molin
 */
public class payment extends javax.swing.JFrame {

    /**
     *
     */
    public ArrayList<Denomination> denominationValues = new ArrayList<>();

    /**
     * Creates new form payment
     */
    public payment() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        t_Price = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        t_Cal = new javax.swing.JTextField();
        butInput = new javax.swing.JButton();
        butPay = new javax.swing.JButton();
        t_total = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        butAgain = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Price :");

        jLabel2.setText("Calories: ");

        butInput.setText("Input Money");
        butInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butInputActionPerformed(evt);
            }
        });

        butPay.setText("Pay");
        butPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butPayActionPerformed(evt);
            }
        });

        t_total.setText("Click");
        t_total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_totalActionPerformed(evt);
            }
        });

        jLabel3.setText("Total Money:");

        butAgain.setText("Buy Again");
        butAgain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAgainActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(107, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(73, 73, 73)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(t_Price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t_Cal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(134, 134, 134))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(butPay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(butInput, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                            .addComponent(butAgain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t_total, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addComponent(jLabel3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t_Price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(t_Cal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(t_total, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(butInput, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(butPay, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(butAgain)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private javax.swing.JLabel t_moneyDisplayLabel;
    
    
    private void butInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butInputActionPerformed
        String amountInput = JOptionPane.showInputDialog(this, "Enter an Amount:");
        String countInput = JOptionPane.showInputDialog(this, "Enter the Count:");
    
        if (amountInput != null && countInput != null) {
            try {
                int amount = Integer.parseInt(amountInput);
                int count = Integer.parseInt(countInput);
                Denomination denomination = new Denomination(amount, count);
                denominationValues.add(denomination); // Add the denomination to the ArrayList
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Invalid input. Please enter valid integers.");
            }
        }
    }//GEN-LAST:event_butInputActionPerformed

    
    class Denomination {
    private int amount;
    private int count;

    public Denomination(int amount, int count) {
        this.amount = amount;
        this.count = count;
    }

    public int getAmount() {
        return amount;
    }

    public int getCount() {
        return count;
    }
    public int getTotalAmount() {
        return amount * count;
    }
    

}
    
    /**
     *
     * @return
     */
    public ArrayList<Denomination> getDenominationValues() {
        return denominationValues;
    }
    
    /**
     *
     * @return
     */
    public JTextField getT_Price() {
        return t_Price;
    }

    /**
     *
     * @return
     */
    public JTextField getT_Cal() {
        return t_Cal;
    }
    
    
    private List<Denomination> calculateChangeDenominations(double changeAmount) {
    List<Denomination> denominations = new ArrayList<>();

    int[] availableDenominations = {1000, 500, 200, 100}; // Example denominations

    for (int denominationValue : availableDenominations) {
        if (changeAmount >= denominationValue) {
            int count = (int) (changeAmount / denominationValue);
            denominations.add(new Denomination(denominationValue, count));
            changeAmount -= count * denominationValue;
        }
    }

    return denominations;
}
    
    
    private void butPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butPayActionPerformed
        

    double totalPrice = Double.parseDouble(getT_Price().getText());

    if (totalAmount == totalPrice) {
    JOptionPane.showMessageDialog(this, "Payment successful!");
    // You might want to clear the denominationValues list here
} else if (totalAmount > totalPrice) {
    double changeAmount = totalAmount - totalPrice;

    // Calculate the change breakdown in denominations
    List<Denomination> changeDenominations = calculateChangeDenominations(changeAmount);

    if (changeAmount == 0) {
        JOptionPane.showMessageDialog(this, "Payment successful! No change needed.");
    } else {
        // Create a message for payment success and change breakdown
        String message = "Payment successful!\nChange: P" + changeAmount + "\nChange Breakdown:";

        for (Denomination denomination : changeDenominations) {
            message += "\n" + denomination.getCount() + " x P" + denomination.getAmount();
        }

        JOptionPane.showMessageDialog(this, message);
    }

    // You might want to clear the denominationValues list here

} else {
    // Total amount is not enough, prompt the user to input more money
    JOptionPane.showMessageDialog(this, "Total amount is not enough. Please input more money.");
}
    }//GEN-LAST:event_butPayActionPerformed

    int totalAmount = 0;
    
    private void t_totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_totalActionPerformed
        // TODO add your handling code here:
         
    
    for (Denomination denomination : denominationValues) {
        totalAmount += denomination.getTotalAmount();
    }

    t_total.setText(String.valueOf(totalAmount));
    }//GEN-LAST:event_t_totalActionPerformed

    private void butAgainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAgainActionPerformed
        
        mainGUI.getInstance().setVisible(true); // Show the mainGUI instance
    dispose(); // Close the current window
    }//GEN-LAST:event_butAgainActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new payment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butAgain;
    private javax.swing.JButton butInput;
    private javax.swing.JButton butPay;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField t_Cal;
    private javax.swing.JTextField t_Price;
    private javax.swing.JButton t_total;
    // End of variables declaration//GEN-END:variables
}
